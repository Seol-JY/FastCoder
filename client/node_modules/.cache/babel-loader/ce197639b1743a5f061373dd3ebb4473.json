{"ast":null,"code":"var _jsxFileName = \"/Users/seol-jy/Desktop/Github_Projects/FastCoder/client/src/components/Text.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { setCorrectchr } from '../redux/correct/actions';\nimport { setWrongchr } from '../redux/wrong/actions';\nimport getFilecontents from '../utils/filecontents';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Text(props) {\n  _s();\n\n  //const colormap = file.colormap\n  const [textSplit, setTextSplit] = useState([]);\n  const [themeColor, setThemeColor] = useState(\"\");\n  let wrong = 0,\n      correct = 0;\n  const user = props.userInput;\n  const userSplit = user.split(\"\");\n  useEffect(() => {\n    setTextSplit(getFilecontents(props.file).content);\n  }, [props.file]);\n  useEffect(() => {\n    const len = textSplit.length;\n    props.setFileLength(len); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [textSplit]);\n  useEffect(() => {\n    if (props.daynight % 2 === 1) setThemeColor(\"#585858\");else setThemeColor(\"#BEBEBE\");\n  }, [props.daynight]);\n  useEffect(() => {\n    props.setCorrectchr(correct);\n    props.setWrongchr(wrong); // eslint-disable-next-line react-hooks/exhaustive-deps\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"textdisplay\",\n    children: textSplit.map((s, i) => {\n      let color;\n      let colortxt;\n      let wrongLineBreak;\n\n      if (i < user.length) {\n        if (s === userSplit[i]) {\n          //correct (개행시 어떤값이든 PASS)\n          color = \"\";\n          colortxt = themeColor;\n          correct++;\n        } else if (s === \"\\n\" && userSplit[i] !== \"\\n\") {\n          wrongLineBreak = true;\n          wrong++;\n        } else {\n          //wrong\n          color = \"#ff5c5c\";\n          colortxt = \"white\";\n          wrong++;\n        }\n      }\n\n      const chr = i === user.length - 1 ? userSplit[i] === \"\\n\" || s === \"\\n\" ? s : userSplit[i] : s;\n      return /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          display: \"inline\",\n          backgroundColor: color,\n          color: colortxt\n        },\n        children: [user.length === i ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cursor\",\n          children: \"_\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 34\n        }, this) : \"\", wrongLineBreak ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrong-line-break\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 31\n        }, this) : \"\", chr]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Text, \"2Lw2tZ3y48eQFifmJrEUyXEKAXI=\");\n\n_c = Text;\n\nconst mapStateToProps = state => {\n  return {\n    Correctchr: state.correct.Correctchr,\n    Wrongchr: state.wrong.Wrongchr\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setCorrectchr: cor => dispatch(setCorrectchr(cor)),\n    setWrongchr: wr => dispatch(setWrongchr(wr))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Text);\n\nvar _c;\n\n$RefreshReg$(_c, \"Text\");","map":{"version":3,"names":["useEffect","useState","connect","setCorrectchr","setWrongchr","getFilecontents","Text","props","textSplit","setTextSplit","themeColor","setThemeColor","wrong","correct","user","userInput","userSplit","split","file","content","len","length","setFileLength","daynight","map","s","i","color","colortxt","wrongLineBreak","chr","display","backgroundColor","mapStateToProps","state","Correctchr","Wrongchr","mapDispatchToProps","dispatch","cor","wr"],"sources":["/Users/seol-jy/Desktop/Github_Projects/FastCoder/client/src/components/Text.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { setCorrectchr } from '../redux/correct/actions'\nimport {setWrongchr} from '../redux/wrong/actions'\nimport getFilecontents from '../utils/filecontents'\n\nfunction Text(props) {\n  //const colormap = file.colormap\n  const [textSplit, setTextSplit] = useState([]);\n  const [themeColor, setThemeColor] = useState(\"\");\n  let wrong = 0,\n    correct = 0;\n  const user = props.userInput;\n  const userSplit = user.split(\"\");\n\n  useEffect(() => {\n    setTextSplit(getFilecontents(props.file).content);\n  }, [props.file]);\n\n  useEffect(() => {\n    const len = textSplit.length;\n    props.setFileLength(len);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [textSplit]);\n\n  useEffect(() => {\n    if (props.daynight % 2 === 1) setThemeColor(\"#585858\");\n    else setThemeColor(\"#BEBEBE\");\n  }, [props.daynight]);\n\n  useEffect(() => {\n    props.setCorrectchr(correct);\n    props.setWrongchr(wrong);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  });\n\n  return (\n    <div className=\"textdisplay\">\n      {textSplit.map((s, i) => {\n        \n        let color;\n        let colortxt;\n        let wrongLineBreak;\n\n        if (i < user.length) {\n          if (s === userSplit[i]) {\n            //correct (개행시 어떤값이든 PASS)\n            color = \"\";\n            colortxt = themeColor;\n            correct++;\n          } else if (s === \"\\n\" && userSplit[i] !== \"\\n\") {\n            wrongLineBreak = true;\n            wrong++;\n          } else {\n            //wrong\n            color = \"#ff5c5c\";\n            colortxt = \"white\";\n            wrong++;\n          }\n        }\n\n        const chr =\n          i === user.length - 1\n            ? userSplit[i] === \"\\n\" || s === \"\\n\"\n              ? s\n              : userSplit[i]\n            : s;\n\n        return (\n          <pre key={i} style={{display: \"inline\", backgroundColor: color, color: colortxt}}>\n            {user.length === i ? <div className=\"cursor\">_</div> : \"\"}\n            {wrongLineBreak ? <div className=\"wrong-line-break\"></div> : \"\"}\n            {chr}\n          </pre>\n        );\n      })}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        Correctchr: state.correct.Correctchr,\n        Wrongchr: state.wrong.Wrongchr,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setCorrectchr: (cor)=>dispatch(setCorrectchr(cor)),\n        setWrongchr: (wr)=>dispatch(setWrongchr(wr))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Text)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}